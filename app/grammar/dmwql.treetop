
grammar Dmwql
  rule search
    first:expression second:( s union:union_keyword s next:expression )* <Search>
    / string:string <StringSearch>
  end
  
  rule expression
    (!union_keyword
    query:query <Expression>
    / '(' s search:search s ')' <Expression>
    )
  end
  
  rule query
    comp:query_comparison <Query>
    / group:query_group <Query>
  end
  
  rule query_comparison
    id:id s op:comp_op s value:number <NumberComparison>
    / id:id s op:comp_op s value:boolean <BooleanComparison>
    / id:id s op:comp_op_string s value:string <StringComparison>
  end

  rule query_group
    id S 'IN'i S '(' s literal second:(s ',' s literal )* s ')' <Group>
  end
  
  rule union_keyword
    'AND'i / 'OR'i
  end

  rule literal
    string
    / boolean
    / number
  end
  
  rule boolean
    ( 'true'i / 'false'i ) !alphanumeric
  end
  
  rule comp_op_string
    '=' / '~'
  end

  rule comp_op
    '=' / '!=' / '<=' / '>=' / '<' / '>'
  end
  
  rule s # Optional space
    S?
  end
  
  rule S # Mandatory space
    [ \t\n\r]+
  end
  
  rule number
    [-+]? [0-9]+ fraction?
  end
  
  rule fraction
    '.' [0-9]+
  end
  
  rule id
    alpha alphanumeric*
  end

  rule alphas
    alpha+
  end

  rule alpha
    [A-Za-z_]
  end
  
  rule alphanumeric
    alpha / [0-9]
  end

  rule string
    "'" string_char (" " / string_char)* "'" / (string_char)+
  end

  rule string_char
    [0-9a-zA-Z_\-\*]
  end
end
