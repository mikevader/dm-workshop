---
name: "Metadata: Label pull requests CI status"

on:
  workflow_run:
    workflows:
      - "Pull Request: Validate"
    types:
      - completed

jobs:
  label-ci-status:
    name: Label CI status
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download workflow artifact
        uses: dawidd6/action-download-artifact@v2.28.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: pr-validate.yaml
          run_id: ${{ github.event.workflow_run.id }}
          name: pr_metadata
          path: ./pr_metadata

      - name: Read the pr_number file
        id: pr_num_reader
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ./pr_metadata/pr_number.txt

      - name: "Get workflow job status"
        uses: actions/github-script@v7
        id: get-workflow-jobs
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # https://mhagemann.medium.com/the-ultimate-way-to-slugify-a-url-string-in-javascript-b8e4a0d849e1
          script: |
            function slugify(string) {
              const a = 'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìıİłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;'
              const b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------'
              const p = new RegExp(a.split('').join('|'), 'g')

              return string.toString().toLowerCase()
                .replace(/\s+/g, '-') // Replace spaces with -
                .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters
                .replace(/&/g, '-and-') // Replace & with 'and'
                .replace(/[^\w\-]+/g, '') // Remove all non-word characters
                .replace(/\-\-+/g, '-') // Replace multiple - with single -
                .replace(/^-+/, '') // Trim - from start of text
                .replace(/-+$/, '') // Trim - from end of text
            }

            let result = new Object

            const wfJobs = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            })

            for (const job of wfJobs.data.jobs) {
              result[slugify(job.name)] = job.conclusion
            }

            console.log(result)
            return result

      - name: Label pre-commit status
        uses: mikevader/charts/.github/actions/label-from-status@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.pr_num_reader.outputs.content }}
          prefix: precommit
          job-status: |-
            ${{ fromJSON(steps.get-workflow-jobs.outputs.result).pre-commit-check-run-pre-commit-checks || 'skipped' }}
          remove-on-skipped: true


      - name: Label lint status
        uses: mikevader/charts/.github/actions/label-from-status@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}‡
          issue-number: ${{ steps.pr_num_reader.outputs.content }}
          prefix: lint
          job-status: |-
            ${{ fromJSON(steps.get-workflow-jobs.outputs.result).lint-rails-application || 'skipped' }}
          remove-on-skipped: true

      - name: Label test status
        uses: mikevader/charts/.github/actions/label-from-status@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.pr_num_reader.outputs.content }}
          prefix: test
          job-status: |-
            ${{ fromJSON(steps.get-workflow-jobs.outputs.result).test-rails-application || 'skipped' }}
          remove-on-skipped: true

      - name: Label container status
        uses: mikevader/charts/.github/actions/label-from-status@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.pr_num_reader.outputs.content }}
          prefix: container
          job-status: |-
            ${{ fromJSON(steps.get-workflow-jobs.outputs.result).build-docker-image || 'skipped' }}
          remove-on-skipped: true

      - name: Label chart install status
        uses: mikevader/charts/.github/actions/label-from-status@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.pr_num_reader.outputs.content }}
          prefix: chart
          job-status: |-
            ${{ fromJSON(steps.get-workflow-jobs.outputs.result).build-helm-chart || 'skipped' }}
          remove-on-skipped: true
